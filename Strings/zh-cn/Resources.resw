<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPlugin" xml:space="preserve">
    <value>添加插件</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>打开文件夹</value>
  </data>
  <data name="PluginManager" xml:space="preserve">
    <value>插件管理器</value>
  </data>
  <data name="MinVersion" xml:space="preserve">
    <value>最低支持</value>
  </data>
  <data name="GoPluginTip" xml:space="preserve">
    <value>前往挑选插件</value>
  </data>
  <data name="PluginFolder" xml:space="preserve">
    <value>插件文件夹</value>
  </data>
  <data name="PluginFolderDescription" xml:space="preserve">
    <value>存放插件的文件夹</value>
  </data>
  <data name="PluginStore" xml:space="preserve">
    <value>插件商店</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>安装</value>
  </data>
  <data name="Installed" xml:space="preserve">
    <value>已安装</value>
  </data>
  <data name="Upgrade" xml:space="preserve">
    <value>升级</value>
  </data>
  <data name="UpdatedAt" xml:space="preserve">
    <value>更新时间</value>
  </data>
  <data name="CreatedAt" xml:space="preserve">
    <value>创建时间</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="PluginSecurityStatement" xml:space="preserve">
    <value>插件安全声明</value>
  </data>
  <data name="PluginSecurityCheck" xml:space="preserve">
    <value>我已阅读并接受该插件加载安全声明，并自行承担使用插件的风险。</value>
  </data>
  <data name="PluginSecurity_Responsibility" xml:space="preserve">
    <value>责任声明</value>
  </data>
  <data name="PluginSecurity_CodeRisk" xml:space="preserve">
    <value>代码执行风险</value>
  </data>
  <data name="PluginSecurity_Permission" xml:space="preserve">
    <value>权限与数据访问</value>
  </data>
  <data name="PluginSecurity_Source" xml:space="preserve">
    <value>插件来源风险</value>
  </data>
  <data name="PluginSecurity_Start" xml:space="preserve">
    <value>在您加载第三方插件前，请务必阅读并理解以下安全声明：</value>
  </data>
  <data name="PluginSecurity_Source_Content" xml:space="preserve">
    <value>仅从可信赖的来源下载和安装插件。恶意插件可能包含病毒、木马或其他恶意代码，可能会对您的设备和数据造成损害。</value>
  </data>
  <data name="PluginSecurity_Permission_Content" xml:space="preserve">
    <value>插件可能需要访问您的系统资源、网络或敏感数据。请务必检查插件的权限请求，避免授予不必要的访问权限，以降低潜在的安全风险。</value>
  </data>
  <data name="PluginSecurity_CodeRisk_Content" xml:space="preserve">
    <value>任何插件在加载后都可以执行任意代码，可能偷取您的个人信息，甚至造成数据与财产丢失。请谨慎选择并使用插件，以确保其安全性和可靠性。</value>
  </data>
  <data name="PluginSecurity_Responsibility_Content" xml:space="preserve">
    <value>本软件提供的插件加载功能仅作为扩展机制，不对任何第三方插件的安全性、合法性或行为负责。因使用第三方插件导致的任何损失或数据泄露，责任由用户自行承担。</value>
  </data>
  <data name="PluginSecurityConfirm" xml:space="preserve">
    <value>接受并继续</value>
  </data>
  <data name="GeneralSetting" xml:space="preserve">
    <value>总设置</value>
  </data>
  <data name="PluginManagerSettings" xml:space="preserve">
    <value>插件管理器设置</value>
  </data>
  <data name="PluginSecurityStatementVersion" xml:space="preserve">
    <value>插件安全声明版本号</value>
  </data>
  <data name="Agree" xml:space="preserve">
    <value>同意</value>
  </data>
  <data name="Refuse" xml:space="preserve">
    <value>拒绝</value>
  </data>
  <data name="ReadPluginSecurityStatement" xml:space="preserve">
    <value>查阅插件安全声明</value>
  </data>
  <data name="GithubMirror" xml:space="preserve">
    <value>Github镜像域名</value>
  </data>
  <data name="StoreUri" xml:space="preserve">
    <value>插件商店请求地址</value>
  </data>
  <data name="StoreSetting" xml:space="preserve">
    <value>插件商店设置</value>
  </data>
  <data name="StorePing" xml:space="preserve">
    <value>插件商店连通性</value>
  </data>
  <data name="StorePingDescription" xml:space="preserve">
    <value>测试插件商店是否允许访问</value>
  </data>
  <data name="StoreUriDescription" xml:space="preserve">
    <value>从该地址获取插件列表</value>
  </data>
  <data name="GithubMirrorDescription" xml:space="preserve">
    <value>如果是Github链接,使用该镜像域名访问</value>
  </data>
</root>